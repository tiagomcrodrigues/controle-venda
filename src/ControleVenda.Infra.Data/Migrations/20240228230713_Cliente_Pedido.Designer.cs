// <auto-generated />
using System;
using ControleVenda.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleVenda.Infra.Data.Migrations
{
    [DbContext(typeof(DbVenda))]
    [Migration("20240228230713_Cliente_Pedido")]
    partial class Cliente_Pedido
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("UK_Categoria_Nome");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bairro");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Complemento");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("Documento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("Email");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Logradouro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Numero");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefone");

                    b.Property<string>("TipoLogradouro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TipoLogradouro");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TipoPessoa");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("Uf");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .IsUnique()
                        .HasDatabaseName("UK_Cliente_Documento");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_Cliente_Nome");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("Cancelado")
                        .HasColumnType("bit")
                        .HasColumnName("Cancelado");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Data");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoId");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("ProdutoId");

                    b.Property<int>("Quantidade")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("Quantidade");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("ValorUnitario");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItem", (string)null);
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("CategoriaId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<int>("Quantidade")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("Quantidade");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("ValorUnitario");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("UK_Produto_Nome");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Pedido", b =>
                {
                    b.HasOne("ControleVenda.Infra.Data.Tables.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.PedidoItem", b =>
                {
                    b.HasOne("ControleVenda.Infra.Data.Tables.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleVenda.Infra.Data.Tables.Produto", "Produto")
                        .WithMany("Itens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Produto", b =>
                {
                    b.HasOne("ControleVenda.Infra.Data.Tables.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ControleVenda.Infra.Data.Tables.Produto", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
